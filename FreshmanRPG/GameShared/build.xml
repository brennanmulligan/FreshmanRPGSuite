<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="GameShared.test" name="GameShared" xmlns:jacoco="antlib:org.jacoco.ant" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle.ant">

    <dirname property="GameShared.directory" file="${ant.file.GameShared}"/>
    <property name="Artifacts.output" value="artifacts"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>

    <path id="GameShared.classpath">
        <pathelement location="${GameShared.directory}/bin"/>
        <pathelement location="${GameShared.directory}/libs/hamcrest-core-1.3.jar"/>
        <pathelement location="${GameShared.directory}/libs/junit-4.12.jar"/>
        <pathelement location="${GameShared.directory}/libs/easymock-3.1.jar"/>
        <pathelement location="${GameShared.directory}/libs/equalsverifier-1.3.1.jar"/>
        <pathelement location="${GameShared.directory}/libs/junit-addons-1.4.jar"/>
        <pathelement location="${GameShared.directory}/libs/guava-15.0.jar"/>
        <pathelement location="${GameShared.directory}/libs/reflections-0.9.9-RC1-uberjar.jar"/>
        <pathelement location="${GameShared.directory}/libs/javassist.jar"/>
        <pathelement location="${GameShared.directory}/libs/cglib-nodep-2.2.3.jar"/>
        <pathelement location="${GameShared.directory}/libs/objenesis-1.3.jar"/>
        <pathelement location="${GameShared.directory}/libs/mysql-connector-java-5.1.16.jar"/>
    </path>

    <path id="jacoco.classpath">
        <pathelement location="${GameShared.directory}/libs/asm-5.2.jar"/>
        <pathelement location="${GameShared.directory}/libs/asm-analysis-5.2.jar"/>
        <pathelement location="${GameShared.directory}/libs/asm-commons-5.2.jar"/>
        <pathelement location="${GameShared.directory}/libs/asm-tree-5.2.jar"/>
        <pathelement location="${GameShared.directory}/libs/asm-util-5.2.jar"/>
        <pathelement location="${GameShared.directory}/libs/asm-xml-5.2.jar"/>
        <pathelement location="${GameShared.directory}/libs/org.jacoco.ant-0.7.9.jar"/>
        <pathelement location="${GameShared.directory}/libs/org.jacoco.report-0.7.9.jar"/>
        <pathelement location="${GameShared.directory}/libs/org.jacoco.core-0.7.9.jar"/>
        <pathelement location="${GameShared.directory}/libs/org.jacoco.agent-0.7.9.jar"/>
    </path>

    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath refid="jacoco.classpath"/>
    </taskdef>

    <target name="GameShared.init">
        <mkdir dir="${GameShared.directory}/bin"/>
    </target>

    <target name="GameShared.clean">
        <delete dir="${GameShared.directory}/bin"/>
    </target>

    <target depends="GameShared.init" name="GameShared.build">
        <javac destdir="${GameShared.directory}/bin" source="${source}" target="${target}" includeantruntime="false">
            <classpath refid="GameShared.classpath"/>
            <src path="${GameShared.directory}/src"/>
            <src path="${GameShared.directory}/tests"/>
        </javac>
    </target>
	
	<target depends="GameShared.build" name="GameShared.seed">
		<java classname="DatabaseBuilders.BuildTestDBServers" failonerror="true">
			 <classpath refid="GameShared.classpath"/>
		</java>
	</target>

    <target depends="GameShared.build" name="GameShared.test">
        <mkdir dir="${GameShared.directory}/${Artifacts.output}"/>

        <jacoco:coverage>
            <junit fork="true" dir="${GameShared.directory}" haltonfailure="true">
                <classpath refid="GameShared.classpath"/>
                <test name="AllSharedTests" todir="${GameShared.directory}/${Artifacts.output}"/>
                <formatter type="brief" usefile="false"/>
                <formatter type="plain"/>
            </junit>
        </jacoco:coverage>

        <jacoco:report>
            <executiondata>
                <file file="jacoco.exec"/>
            </executiondata>

            <structure name="GameShared">
                <classfiles>
                    <fileset dir="${GameShared.directory}/bin"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${GameShared.directory}/src"/>
                </sourcefiles>
            </structure>

            <html destdir="${GameShared.directory}/${Artifacts.output}/coverage-html"/>
            <csv destfile="${GameShared.directory}/${Artifacts.output}/coverage-csv.csv"/>
        </jacoco:report>
    </target>
	
	<target name="GameShared.checkstyle"
		        description="Generates a report of code convention violations."
			depends="init-checkstyle">
		  <!-- See http://checkstyle.sourceforge.net/anttask.html
		       for full options of using checkstyle with ant-->
		  <checkstyle config="${GameShared.directory}/checkstyle.xml"
		              failureProperty="checkstyle.failure"
		              failOnViolation="false">
		    <formatter type="xml" tofile="checkstyle_report.xml"/>
		    <fileset dir="src" includes="**/*.java"/>
		  </checkstyle>
		</target>

		<target name="init-checkstyle">
			<path id="checkstyle.lib.path">
		            <fileset dir="lib" includes="*.jar"/>
			</path>
			<!-- Sevntu custom checks are retrieved by Ivy into lib folder
		       and will be accessible to checkstyle-->
			<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
			         classpath="${GameShared.directory}/libs/checkstyle-8.30-all.jar"/>
		</target>

</project>
