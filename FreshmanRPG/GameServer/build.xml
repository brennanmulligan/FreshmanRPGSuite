<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="GameServer.test" name="GameServer" xmlns:jacoco="antlib:org.jacoco.ant" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle.ant">

    <import file="../GameShared/build.xml"/>

    <dirname property="GameServer.directory" file="${ant.file.GameServer}"/>
    <property name="Artifacts.output" value="artifacts"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>


    <path id="GameServer.classpath">
        <path refid="GameShared.classpath"/>
        <pathelement location="${GameServer.directory}/bin"/>
    </path>

    <target depends="GameShared.init" name="GameServer.init">
        <mkdir dir="${GameServer.directory}/bin"/>
    </target>

    <target depends="GameShared.clean" name="GameServer.clean">
        <delete dir="${GameServer.directory}/bin"/>
    </target>

    <target depends="GameServer.init,GameShared.build" name="GameServer.build">
        <javac destdir="${GameServer.directory}/bin" source="${source}" target="${target}" includeantruntime="false">
            <classpath refid="GameServer.classpath"/>
            <src path="${GameServer.directory}/src"/>
            <src path="${GameServer.directory}/tests"/>
        </javac>
    </target>
	
	
	<target depends="GameServer.build" name="GameServer.seed">
		
		 <java classname="DatabaseBuilders.BuildQuestsAndObjectives" failonerror="true">
		 	<classpath refid="GameServer.classpath"/>
		 </java>
		<java classname="DatabaseBuilders.BuildTestDBPlayers" failonerror="true">
			<classpath refid="GameServer.classpath"/>
		</java>
		<java classname="DatabaseBuilders.BuildTestLevels" failonerror="true">
			<classpath refid="GameServer.classpath"/>
		</java>
		<java classname="DatabaseBuilders.BuildTestQuestions" failonerror="true">
			<classpath refid="GameServer.classpath"/>
		</java>
		<java classname="DatabaseBuilders.BuildTestInteractableItems" failonerror="true">
			<classpath refid="GameServer.classpath"/>
		</java>
	</target>

    <target depends="GameServer.build" name="VisitedMap.seed">
    	<java classname="DatabaseBuilders.BuildTestDoubloonPrizes" failonerror="true">
    						<classpath refid="GameServer.classpath"/>
    			</java>	
    	<java classname="DatabaseBuilders.BuildTestRandomFacts" failonerror="true">
    	    				<classpath refid="GameServer.classpath"/>
    	  </java>	
			 <java classname="DatabaseBuilders.BuildTestDBVisitedMaps" failonerror="true">
			 	<classpath refid="GameServer.classpath"/>
			 </java>	
    	<java classname="DatabaseBuilders.BuildFriends" failonerror="true">
    						<classpath refid="GameServer.classpath"/>
    			</java>
	</target>


	
    <target depends="GameServer.build" name="GameServer.jar">
        <jar destfile="${GameServer.directory}/${Artifacts.output}/GameServer.jar">
            <fileset dir="${GameShared.directory}/bin"/>
            <fileset dir="${GameServer.directory}/bin"/>

            <archives>
                <zips>
                    <fileset dir="${GameShared.directory}/libs"/>
                </zips>
            </archives>

            <manifest>
                <attribute name="Main-Class" value="edu.ship.shipsim.areaserver.Server"/>
            </manifest>
        </jar>
    </target>

    <target depends="GameServer.build" name="GameServer.test">
        <mkdir dir="${GameServer.directory}/${Artifacts.output}"/>

        <jacoco:coverage>
            <junit fork="true" dir="${GameServer.directory}" haltonfailure="true">
                <classpath refid="GameServer.classpath"/>
                <test name="AllServerTests" todir="${GameServer.directory}/${Artifacts.output}"/>
                <formatter type="brief" usefile="false"/>
                <formatter type="plain"/>
            </junit>
        </jacoco:coverage>

        <jacoco:report>
            <executiondata>
                <file file="jacoco.exec"/>
            </executiondata>

            <structure name="GameServer">
                <classfiles>
                    <fileset dir="${GameServer.directory}/bin"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${GameServer.directory}/src"/>
                </sourcefiles>
            </structure>

            <html destdir="${GameServer.directory}/${Artifacts.output}/coverage-html"/>
            <csv destfile="${GameServer.directory}/${Artifacts.output}/coverage-csv.csv"/>
        </jacoco:report>
    </target>
	
	<target name="GameServer.checkstyle"
	        description="Generates a report of code convention violations."
		depends="init-checkstyle">
	  <!-- See http://checkstyle.sourceforge.net/anttask.html
	       for full options of using checkstyle with ant-->
	  <checkstyle config="${GameShared.directory}/checkstyle.xml"
	              failureProperty="checkstyle.failure"
	              failOnViolation="false">
	    <formatter type="xml" tofile="checkstyle_report.xml"/>
	    <fileset dir="src" includes="**/*.java"/>
	  </checkstyle>
	</target>

	<target name="init-checkstyle">
		<path id="checkstyle.lib.path">
	            <fileset dir="lib" includes="*.jar"/>
		</path>
		<!-- Sevntu custom checks are retrieved by Ivy into lib folder
	       and will be accessible to checkstyle-->
		<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
		         classpath="${GameShared.directory}/libs/checkstyle-8.30-all.jar"/>
	</target>

</project>
